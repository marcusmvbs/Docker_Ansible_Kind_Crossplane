---
- name: Install needed packages / Helm repo tasks / Kind cluster creation and configuration
  hosts: localhost
  become: yes # exec as root
  tasks:

    # Install needed packages tasks
    - name: Update Container Packages
      apt:
        update_cache: yes

    - name: Download Kind binary
      get_url:
        url: "https://github.com/kubernetes-sigs/kind/releases/download/v0.12.0/kind-linux-amd64"
        dest: "/usr/local/bin/kind"
        mode: '0755'

    - name: Download kubectl binary
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/v1.24.1/bin/linux/amd64/kubectl"
        dest: "/usr/local/bin/kubectl"
        mode: '0755'
      
    - name: Download Helm binary
      get_url:
        url: "https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz"
        dest: "/tmp/helm.tar.gz"

    - name: Extract Helm binary
      ansible.builtin.unarchive:
        src: "/tmp/helm.tar.gz"
        dest: "/tmp/"

    - name: Move Helm binary to /usr/local/bin/
      ansible.builtin.copy:
        src: "/tmp/linux-amd64/helm"
        dest: "/usr/local/bin/helm"
        mode: '0755'

    # Helm repo tasks
    - name: Ingress-Nginx Helm Repo
      ansible.builtin.command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

    - name: Redis/SQL/Nginx Helm Repo
      ansible.builtin.command: helm repo add bitnami https://charts.bitnami.com/bitnami

    - name: Prometheus Helm Repo
      ansible.builtin.command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

    - name: Fluent Bit Helm Repo
      ansible.builtin.command: helm repo add fluent https://fluent.github.io/helm-charts

    - name: Kasten Helm Repo
      ansible.builtin.command: helm repo add kasten https://charts.kasten.io/

    - name: Strimzi Helm Repo
      ansible.builtin.command: helm repo add strimzi https://strimzi.io/charts/

    - name: Search Helm Charts
      ansible.builtin.command: helm search repo

    - name: Update Helm Repositories
      ansible.builtin.command: helm repo update

    # Kind cluster creation and error handling
    - name: Create Kind cluster
      ansible.builtin.command: kind create cluster --config=../kind-config/kind-config.yaml
    #   ignore_errors: true
    #   register: kind_cluster_creation_result
    #   failed_when: "'Cluster already exist' not in kind_cluster_creation_result.stderr"

    # - name: Print Kind cluster creation result
    #   ansible.builtin.debug:
    #     msg: "Kind cluster {{ 'created successfully' if not kind_cluster_creation_result.failed else 'already exists' }}"

    # Create namespaces on cluster environment
    - name: Create namespaces on kind-worker Node
      ansible.builtin.command: kubectl create namespace {{ item }}
      loop:
        - nginxingress-ns
        - webserver-ns
        - database-ns
        - logs-ns
        - cache-ns
        - kafka-ns
        - monitoring-ns
        - kasten-ns

    # Helm Install
    - name: DEBUG
      ansible.builtin.debug:
        msg: "Testing helm installation..."
    # - name: Install Ingress-Nginx using Helm
    #   ansible.builtin.command: helm install my-ingress-nginx ingress-nginx/ingress-nginx --namespace nginxingress-ns
    - name: Install Nginx  "  "
      ansible.builtin.command: helm install my-nginx bitnami/nginx --namespace webserver-ns
    - name: Install PostgreSQL  "  "
      ansible.builtin.command: helm install my-postgresql bitnami/postgresql --namespace database-ns
    - name: Install Prometheus  "  "
      ansible.builtin.command: helm install my-prometheus prometheus-community/prometheus --namespace monitoring-ns
    - name: Install Fluent Bit  "  "
      ansible.builtin.command: helm install my-fluent-bit fluent/fluent-bit --namespace log-ns
    - name: Install Redis  "  "
      ansible.builtin.command: helm install my-redis bitnami/redis --namespace cache-ns
    - name: Install Kasten  "  "
      ansible.builtin.command: helm install my-kasten kasten/k10 --namespace kasten-ns
    - name: Install Strimzi Kafka Operator  "  "
      ansible.builtin.command: helm install my-strimzi strimzi/strimzi-kafka-operator --namespace kafka-ns

    # Cluster configuration
    - name: Cluster configuration
      shell: ../kind-config/gitops_prep_env.sh